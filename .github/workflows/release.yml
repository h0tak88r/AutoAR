name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Gitleaks scan
        uses: gitleaks/gitleaks-action@v2
        with:
          config-path: .gitleaks.toml

      - name: Create release archive
        run: |
          # Create a release directory
          mkdir -p release
          
          # Copy all necessary files
          cp -r modules/ release/
          cp -r lib/ release/
          cp -r python/ release/
          cp -r nuclei_templates/ release/
          cp -r Wordlists/ release/
          cp -r regexes/ release/
          cp -r newcves/ release/
          cp *.sh release/
          cp *.py release/
          cp *.yaml release/
          cp *.yml release/
          cp *.txt release/
          cp *.md release/
          cp Dockerfile release/
          cp docker-compose.yml release/
          cp docker-entrypoint.sh release/
          cp env.example release/
          
          # Create the archive
          tar -czf autoar-${GITHUB_REF_NAME}.tar.gz -C release .
          
          # Create a zip archive as well
          zip -r autoar-${GITHUB_REF_NAME}.zip release/

      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            autoar-*.tar.gz
            autoar-*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/autoar
          tags: |
            type=ref,event=tag
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max